#!/bin/sh

#  Script.sh
#  
#
#  Created by Jack Maloney on 4/2/14.
#

if [[ $EUID -ne 0 ]]; then
   echo "This script must be run as root" 1>&2
   exit 1
fi

export XPKG=/opt/xpkg
export LOG=/opt/xpkg/log/xpkg.log

if [ -f "/opt/xpkg/.xpkg_installed" ]; then
    echo "Xpkg is already installed"
    echo -n "Would you like to reinstall Xpkg [y-n]"
    read ans
    
    if [ $ans == "y" ]; then
      rm -r $XPKG
    else
      exit
    fi
    
fi

touch $HOME/.bash_profile
source $HOME/.bash_profile

echo "Checking PATH..."
if [[ :$PATH: == *":/opt/xpkg/bin:"* ]]; then
  echo "bin PATH Looks Good"
else
  echo "Adding /opt/xpkg/bin to PATH"
  echo '# XPKG PATH SETUP' >> $HOME/.bash_profile
  echo 'export PATH=/opt/xpkg/bin:$PATH' >> $HOME/.bash_profile
  echo '# XPKG PATH SETUP END' >> $HOME/.bash_profile
fi

if [[ :$PATH: == *":/opt/xpkg/sbin:"* ]]; then
  echo "sbin PATH Looks Good"
else
  echo "Adding /opt/xpkg/sbin to PATH"
  echo '# XPKG PATH SETUP' >> $HOME/.bash_profile
  echo 'export PATH=/opt/xpkg/sbin:$PATH' >> $HOME/.bash_profile
  echo '# XPKG PATH SETUP END' >> $HOME/.bash_profile
fi

source $HOME/.bash_profile

cd /opt/

echo "Downloading xpkg"
curl '-#' https://codeload.github.com/jmmaloney4/xpkg/zip/master > ./master.tar.gz
tar -xf ./master.tar.gz
if [[ -d "$/opt/xpkg" ]] ; then
   rm -r ./xpkg
fi
cp -r ./Xpkg-master/ ./xpkg/
rm -r ./Xpkg-master

mkdir -p $XPKG/log
mkdir -p $XPKG/bin
mkdir -p $XPKG/sbin
mkdir -p $XPKG/core
mkdir -p $XPKG/tmp
mkdir -p $XPKG/xpkgs
mkdir -p $XPKG/man/man1/
mkdir -p $XPKG/man/man2/
mkdir -p $XPKG/man/man3/
mkdir -p $XPKG/man/man4/
mkdir -p $XPKG/man/man5/
mkdir -p $XPKG/man/man6/
mkdir -p $XPKG/man/man7/
mkdir -p $XPKG/man/man8/
mkdir -p $XPKG/man/man9/
mkdir -p $XPKG/man/mann/
mkdir -p $XPKG/man/whatis/
mkdir -p $XPKG/core/info/

cd $XPKG

echo "Downloading Git"
curl '-#L' https://codeload.github.com/git/git/tar.gz/v1.9.1 > ./git.tar.gz

echo "Downloading Autoconf"
curl '-#L' http://ftp.gnu.org/gnu/autoconf/autoconf-2.69.tar.gz > ./autoconf.tar.gz

echo "Downloading Automake"
curl '-#L' http://ftp.gnu.org/gnu/automake/automake-1.14.1.tar.gz > ./automake.tar.gz

echo "Unpacking Git"
tar -xf ./git.tar.gz >> $LOG 2>&1

echo "Unpacking Autoconf"
tar -xf ./autoconf.tar.gz >> $LOG 2>&1

echo "Unpacking Automake"
tar -xf ./automake.tar.gz >> $LOG 2>&1

cd $XPKG

# Build Autoconf
echo "Building Autoconf"
mkdir -p /opt/xpkg/core/autoconf
cd ./autoconf-2.69/
./configure --prefix=/opt/xpkg/core/autoconf/ >> $LOG 2>&1
make >> $LOG 2>&1
make install >> $LOG 2>&1
cd /opt/xpkg/core/autoconf/
ln ./bin/* /opt/xpkg/bin
ln ./share/man/man1/* /opt/xpkg/man/man1

cd $XPKG

# Build Automake
echo "Building Automake"
mkdir -p /opt/xpkg/core/automake
cd ./automake-1.14.1/
./configure --prefix=/opt/xpkg/core/automake/ >> $LOG 2>&1
make >> $LOG 2>&1
make install >> $LOG 2>&1
cd /opt/xpkg/core/automake/
ln ./bin/* /opt/xpkg/bin
ln ./share/man/man1/* /opt/xpkg/man/man1/


# Build Git
cd $XPKG
cd ./git-1.9.1/

echo "Building Git, This May Take A Few Minutes"
make configure >> $LOG 2>&1
mkdir -p $XPKG/core/git/1.9.1/
./configure --prefix=$XPKG/core/git/1.9.1/ >> $LOG 2>&1
make all >> $LOG 2>&1
echo "Still Building Git..."
make install >> $LOG 2>&1

cd $XPKG/core/git/1.9.1/
ln -fF ./bin/* $XPKG/bin >> $LOG 2>&1

cd $XPKG >> $LOG 2>&1

if [ $(which -s pod) == 0 ]; then
   echo "CocoaPods already installed"
else
   echo "Installing CocoaPods"
   gem install cocoapods >> $LOG 2>&1
fi

echo "Building Xpkg"
cd $XPKG
$XPKG/bin/git init >> $LOG 2>&1
$XPKG/bin/git remote add origin https://github.com/jmmaloney4/Xpkg.git >> $LOG 2>&1
$XPKG/bin/git pull origin master >> $LOG 2>&1
git branch --set-upstream-to=origin/master >> $LOG 2>&1

